/**
 * A class representation of the BSON Symbol type.
 *
<<<<<<< HEAD
 * @class Represents a BSON Symbol type.
 * @deprecated
 * @param {string} value the string representing the symbol.
=======
 * @class Represents the BSON Symbol type.
 * @param {String} value the string representing the symbol.
>>>>>>> 5aeb704f34ed3491eaa24cdd49c151bf91f304a2
 * @return {Symbol}
 */
function Symbol(value) {
  if(!(this instanceof Symbol)) return new Symbol(value);
  this._bsontype = 'Symbol';
  this.value = value;
}

/**
 * Access the wrapped string value.
 *
<<<<<<< HEAD
 * @method
 * @return {String} returns the wrapped string.
=======
 * @return {String} returns the wrapped string.
 * @api public
>>>>>>> 5aeb704f34ed3491eaa24cdd49c151bf91f304a2
 */
Symbol.prototype.valueOf = function() {
  return this.value;
};

/**
 * @ignore
<<<<<<< HEAD
=======
 * @api private
>>>>>>> 5aeb704f34ed3491eaa24cdd49c151bf91f304a2
 */
Symbol.prototype.toString = function() {
  return this.value;
}

/**
 * @ignore
<<<<<<< HEAD
=======
 * @api private
>>>>>>> 5aeb704f34ed3491eaa24cdd49c151bf91f304a2
 */
Symbol.prototype.inspect = function() {
  return this.value;
}

/**
 * @ignore
<<<<<<< HEAD
=======
 * @api private
>>>>>>> 5aeb704f34ed3491eaa24cdd49c151bf91f304a2
 */
Symbol.prototype.toJSON = function() {
  return this.value;
}

<<<<<<< HEAD
module.exports = Symbol;
module.exports.Symbol = Symbol;
=======
exports.Symbol = Symbol;
>>>>>>> 5aeb704f34ed3491eaa24cdd49c151bf91f304a2
